Given a string, find the length of the longest substring without repeating characters. For example, the longest substring without repeating letters for "abcabcbb" is "abc", which the length is 3. For "bbbbb" the longest substring is "b", with the length of 1.

C++
class Solution {
public:
    int lengthOfLongestSubstring(string s) {

    }
};

Java
public class Solution {
    public int lengthOfLongestSubstring(String s) {

    }
}

Python
class Solution(object):
    def lengthOfLongestSubstring(self, s):
        """
        :type s: str
        :rtype: int
        """

C
int lengthOfLongestSubstring(char* s) {

}

C#
public class Solution {
    public int LengthOfLongestSubstring(string s) {

    }
}

JavaScript
/**
 * @param {string} s
 * @return {number}
 */
var lengthOfLongestSubstring = function(s) {

};

Ruby
# @param {String} s
# @return {Integer}
def length_of_longest_substring(s)

end